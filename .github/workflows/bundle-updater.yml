name: Patch bundle updater

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check_for_updates:
    name: Check for bundle updates
    runs-on: ubuntu-latest

    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.x'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Run generate_bundles.py
        run: |
          bash -c "source venv/bin/activate && python generate_bundles.py"
        working-directory: ${{ github.workspace }}

      - name: Check for changes
        id: check_changes
        if: ${{ success() }}
        run: |
          bash -c "\
          source venv/bin/activate \
          && if git diff --quiet HEAD^ -- '*.json'; then \
                echo '::set-output name=has_changes::false'; \
             else \
                echo '::set-output name=has_changes::true'; \
                echo 'Changed files:' > changed_files.txt; \
                git diff --name-only HEAD^ '*.json' >> changed_files.txt; \
             fi"
        working-directory: ${{ github.workspace }}

      - name: Finalize and commit changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          bash -c "\
          source venv/bin/activate \
          && git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com' \
          && git config --local user.name 'github-actions[bot]' \
          && git remote set-url origin 'https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}' \
          && git add *.json \
          && git diff --cached --quiet || (git commit -m 'Update patch-bundle.json to latest' && git push origin HEAD:${{ github.ref }} --follow-tags)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ github.workspace }}

      - name: Push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bundles

  find_commit:
    name: Find commit for changed files
    runs-on: ubuntu-latest
    needs: check_for_updates
    
    if: ${{ needs.check_for_updates.outputs.has_changes == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up virtual environment
        run: python -m venv venv
        working-directory: ${{ github.workspace }}

      - name: Activate virtual environment and install dependencies
        run: |
          bash -c "\
          source venv/bin/activate \
          && python -m pip install requests httpx"
        working-directory: ${{ github.workspace }}

      - name: Find commit for changed files
        run: |
          bash -c "\
          source venv/bin/activate \
          && python find_commit.py"
        working-directory: ${{ github.workspace }}

      - name: Create artifact of changed files
        if: ${{ needs.check_for_updates.outputs.has_changes == 'true' }}
        uses: actions/upload-artifact@v4.3.3
        with:
          name: changed_files
          path: changed_files.txt

  pull_changed_files:
    name: Pull changed files
    runs-on: ubuntu-latest
    needs: find_commit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download changed files artifact
        uses: actions/download-artifact@v2
        with:
          name: changed_files
          path: ${{ github.workspace }}/changed_files

      - name: List contents of directory after download
        run: ls -l ${{ github.workspace }}/changed_files
        if: success()

      - name: Get artifact ID
        id: get_artifact_id
        run: echo "::set-output name=artifact_id::${{ github.run_id }}"

      - name: Unzip artifact
        run: unzip -o ${{ github.workspace }}/changed_files/${{ steps.get_artifact_id.outputs.artifact_id }}/changed_files.zip -d ${{ github.workspace }}/changed_files
        if: success()

      - name: List contents of directory after unzip
        run: ls -l ${{ github.workspace }}/changed_files
        if: success()

      - name: Pull changes
        run: |
          while IFS= read -r file; do
            git checkout HEAD -- "$file"
          done < ${{ github.workspace }}/changed_files/${{ steps.get_artifact_id.outputs.artifact_id }}/changed_files.txt
        if: success()
