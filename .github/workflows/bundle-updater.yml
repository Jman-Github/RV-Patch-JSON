name: Patch bundle updater

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check_for_updates:
    name: Check for bundle updates
    runs-on: ubuntu-latest

    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.x'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Run generate_bundles.py
        run: |
          source venv/bin/activate
          python generate_bundles.py
        working-directory: ${{ github.workspace }}

      - name: Check for changes
        id: check_changes
        if: success()
        run: |
          source venv/bin/activate
          git fetch
          if git diff --quiet HEAD^ -- '*.json'; then
            echo "::set-output name=has_changes::false"
          else
            echo "::set-output name=has_changes::true"
            echo "Changed files:" > changed_files.txt
            git diff --name-only HEAD^ -- '*.json' >> changed_files.txt
          fi
        working-directory: ${{ github.workspace }}

  finalize_and_commit_changes:
    name: Finalize and commit changes
    needs: check_for_updates
    if: needs.check_for_updates.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Finalize and commit changes
        if: success()
        run: |
          source venv/bin/activate
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git add *.json
          git diff --cached --quiet || (git commit -m "Update patch-bundle.json to latest" && git push origin HEAD:${{ github.ref }} --follow-tags)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ github.workspace }}

  find_commit:
    name: Find commit for changed files
    runs-on: ubuntu-latest
    needs: finalize_and_commit_changes
    
    if: ${{ needs.finalize_and_commit_changes.outputs.has_changes == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up virtual environment
        run: python -m venv venv
        working-directory: ${{ github.workspace }}

      - name: Activate virtual environment and install dependencies
        run: |
          source venv/bin/activate
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Find commit for changed files
        run: |
          source venv/bin/activate
          python find_commit.py
        working-directory: ${{ github.workspace }}

      - name: Create artifact of changed files
        if: success()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: changed_files
          path: changed_files.txt
