name: Patch bundle updater

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check_for_updates:
    name: Check for bundle updates
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    
    - name: Set up generate_bundles.py
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      
    - name: Run generate_bundles.py
      run: |
        pip install httpx
        python generate_bundles.py
      
    - name: Check for changes
      id: check_changes
      run: |
        git fetch
        if git diff --quiet FETCH_HEAD -- '*.json'; then
          echo "No changes"
          echo "has_changes=false" >> $GITHUB_ENV
        else
          echo "Changes found"
          echo "has_changes=true" >> $GITHUB_ENV
          git diff --name-only FETCH_HEAD '*.json' > $GITHUB_WORKSPACE/changed_files.txt
          echo "Commit link: https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_WORKSPACE/changed_files.txt
          echo "Files changed:" >> $GITHUB_WORKSPACE/changed_files.txt
          git diff --name-only FETCH_HEAD '*.json' >> $GITHUB_WORKSPACE/changed_files.txt
          echo "::set-output name=changed_files_path::$GITHUB_WORKSPACE/changed_files.txt"
        fi
      continue-on-error: true
      
    - name: Finalize and commit changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "${{ secrets.GH_EMAIL }}"
        git config --local user.name "github-actions[bot]"
        git add *.json
        if [ -n "$(git diff --cached --name-only)" ]; then
          git commit -m "Update JSON files to latest"
          git push origin HEAD:bundles
        else
          echo "No changes to commit"
        fi

  upload_artifact:
    name: Upload artifact
    needs: check_for_updates
    runs-on: ubuntu-latest
    if: always() && needs.check_for_updates.outputs.has_changes == 'true'
    steps:
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: changed_files
          path: ${{ needs.check_for_updates.outputs.changed_files_path }}
