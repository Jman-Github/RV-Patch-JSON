name: Patch bundle updater

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check_for_updates:
    name: Check for bundle updates
    runs-on: ubuntu-latest

    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
      changed_files: ${{ steps.find_commit.outputs.changed_files }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Run generate_bundles.py
        id: run_generate_bundles
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install requests httpx
          output=$(python generate_bundles.py)
          echo "$output"
          if [[ $output == *"Your branch is up to date with 'origin/bundles'."* ]]; then
            echo "No changes found. Exiting..."
            exit
          fi
          git add '*.json'
          git diff --cached --quiet || (git commit -m "Update patch-bundle.json to latest" && git push origin HEAD:${{ github.ref }} --follow-tags)
        working-directory: ${{ github.workspace }}

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet HEAD^ -- '*.json'; then
            echo "::set-output name=has_changes::false"
          else
            echo "::set-output name=has_changes::true"
          fi

      - name: Find commit for changed files
        id: find_commit
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          python find_commit.py > changed_files.txt
          cat changed_files.txt

      - name: Push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bundles

      - name: Create artifact of changed files
        if: steps.check_changes.outputs.has_changes == 'true' && steps.find_commit.outputs.changed_files != ''
        uses: actions/upload-artifact@v4.3.3
        with:
          name: changed_files
          path: changed_files.txt

  update_artifact:
    name: Update Artifact
    needs: check_for_updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Download changed files artifact
        uses: actions/download-artifact@v2
        with:
          name: changed_files
          path: ${{ github.workspace }}

      - name: Run find_commit.py
        run: |
          python find_commit.py >> changed_files.txt
        working-directory: ${{ github.workspace }}

      - name: Upload artifact with updated information
        uses: actions/upload-artifact@v2
        with:
          name: updated_files
          path: changed_files.txt